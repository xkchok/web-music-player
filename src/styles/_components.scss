// Import variables and mixins
@import 'variables';
@import 'mixins';

// Component styles
.glass {
  @include glass-effect;
}

.btn-primary {
  @include gradient-button;
  @apply text-white font-medium px-6 py-2 rounded-lg shadow-lg;
}

.waveform-container {
  @apply relative overflow-hidden rounded-lg;
  @include glass-effect;
}

.slider {
  @apply bg-white/20 rounded-lg appearance-none cursor-pointer;
  height: $slider-height;
  
  &::-webkit-slider-thumb {
    @apply appearance-none rounded-full cursor-pointer shadow-lg;
    width: $slider-thumb-size;
    height: $slider-thumb-size;
    background: $gradient-primary;
  }
  
  &::-moz-range-thumb {
    @apply rounded-full cursor-pointer border-0 shadow-lg;
    width: $slider-thumb-size;
    height: $slider-thumb-size;
    background: $gradient-primary;
  }
}

.custom-scrollbar {
  @include custom-scrollbar;
}

// GPU acceleration - only when needed
.gpu-hover {
  @include hover-scale;
}

// Optimize playlist animations for GPU - only during animation
.playlist-item {
  contain: layout style paint;
  @include gpu-acceleration;
  
  &.dragging {
    transform: rotate(2deg);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
  }
}

// Only use will-change during actual interactions
.control-button {
  @include gpu-acceleration;
  
  &:hover,
  &:active {
    will-change: transform;
  }
  
  &:not(:hover):not(:active) {
    will-change: auto;
  }
}

// Drag and drop styles
.drag-handle {
  transition: opacity $transition-duration ease-in-out;
  
  &:hover {
    color: rgb(147 197 253);
  }
}